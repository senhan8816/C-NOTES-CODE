// 预处理指令
#include <iostream>
using namespace std;
int main() {
    // 解决中文乱码问题
    system("chcp 65001");

    // 数组
    // 数组是一批相同类型的元素怒的集合所组成的数据结构，分配一块连续的内存存储
    // 数组语法： 数据类型 数组名[数组长度]
    // 比如： int arr[6] 表示定义了一个长度为6，可以存储int数据类型的数组
    // 数组中的每一个值称之为元素，通过下标索引可以获取值或赋值。下标索引从0开始

    // 给数组单独赋值
    int arr[6];
    arr[0] = 10;
    arr[3] = 40;

    // 数组声明和赋值同步完成的快捷写法
    int arr1[3] = {11,12,13};
    // 或 忽略长度
    int arr2[] = {14,15,16};

    // 数组的特点：
    // 1. 任意类型均可构建数组（存储在数组中）
    // 2. 固定大小（无边界检查）
    // 数组一旦定义完成，长度就固定了，如果下标索引超出范围，编译过程不会报错
    // 3. 内存连续且有序
    // 4. 元素值可以修改（注意：类型要保持一致）
    // 5. 数组变量不记录数据，而是记录了0号元素的内存地址（arr存储的是arr[0]在内存的地址）

    // 获取数组的长度：
    // 数组占用字节长度 / 每个元素占用字节长度 ==> 得到数组长度
    // sizeof(数组)/ sizeof(数组元素) ==> 数组的长度

    return 0;
}


